{"version":3,"sources":["FuncionesPasword.js"],"names":["crypto","require","password","salt","randomBytes","toString","hash","validarPasword","scryptSync","usuarioAutorizado","adminAutorizado"],"mappings":"aAAA,IAAMA,OAASC,QAAS,UAAxB,SAAMD,kBAAkBE,GAGpB,IAAMC,EAAOH,OAAOI,YAAY,IAAIC,SAAS,OAE7C,MAAU,CAGNF,KAAAA,EADJG,KAJaN,OAAOI,WAAPF,EAAgCC,EAA7C,IACA,GAAA,UAAAE,SAAA,QAOH,SAAAE,eAAAL,EAAAI,EAAAH,GAED,OACwBH,OAAOQ,WAAWN,EAAUC,EAAM,IAAQ,GAAI,UAAUE,SAAS,QADjEH,EAGvB,SAAAO,qBAMD,SAASC,mBAMLH,OAAAA,QAAAA,CACAE,kBAAAA,kBACAC,eAAAA,eAJJD,kBAAAA,kBAIIC,gBAAAA","file":"FuncionesPasword.min.js","sourcesContent":["const crypto = require (\"crypto\");\r\n\r\nfunction encriptarPassword(password){\r\n    const salt = crypto.randomBytes(32).toString(\"hex\");\r\n    //console.log(salt);\r\n    const hash = crypto.scryptSync(password, salt, 100000, 64, \"sha512\").toString(\"hex\");\r\n    //console.log(hash);\r\n    return {\r\n        salt,\r\n        hash\r\n    }\r\n}\r\n\r\nfunction validarPasword(password, hash, salt){\r\n    const hashEvaluar = crypto.scryptSync(password, salt, 100000, 64, \"sha512\").toString(\"hex\");\r\n    return hashEvaluar == hash;\r\n}\r\n\r\nfunction usuarioAutorizado(){\r\n\r\n}\r\n\r\nfunction adminAutorizado(){\r\n\r\n}\r\n\r\nmodule.exports={\r\n    encriptarPassword,\r\n    validarPasword,\r\n    usuarioAutorizado,\r\n    adminAutorizado\r\n}\r\n\r\n"]}